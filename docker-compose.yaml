version: "3.8"

services:
  app:
    container_name: et-website_app
    depends_on:
      - redis
      - mysqldb
#      - zookeeper
#      - kafka
    build: ./
    links:
      - redis
#      - kafka
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
      SPRING_PROFILES_ACTIVE: 'develop'
      SPRING_APPLICATION_JSON: '{
          "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE"
      }'
    volumes:
      - C:\\Users\\005875\\filestorage:/home/elmirtaghisoy/ETProjects/uploads
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  mysqldb:
    container_name: et-website_db
    image: mysql:8.0.27
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - C:\\Users\\005875\\mysql:/var/lib/mysql

  redis:
    container_name: et-website_redis
    image: redis:5.0.6
    ports:
      - "6379:6379"
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

#  zookeeper:
#    container_name: zookeeper
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#
#  kafka:
#    container_name: kafka
#    image: wurstmeister/kafka
#    hostname: kafka
#    restart: on-failure
#    links:
#      - zookeeper
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://$HOST_IP:9092
#      KAFKA_LISTENERS: PLAINTEXT://$HOST_IP:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_CREATE_TOPICS: "ACTION:1:1"
#    depends_on:
#      - zookeeper

#  elasticsearch:
#    container_name: elasticsearch
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2-amd64
#    ports:
#      - 9200:9200
#    environment:
#      discovery.type: single-node
#
#  kibana:
#    container_name: kibana
#    image: docker.elastic.co/kibana/kibana:7.9.2
#    ports:
#      - 5601:5601
#    depends_on:
#      - elasticsearch
#
#  filebeat:
#    image: docker.elastic.co/beats/filebeat:7.7.0
#    volumes:
#      - ./filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
#      - /var/lib/docker/containers:/var/lib/docker/containers:ro
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    user: root
#    command: [ "--strict.perms=false" ]
#    restart: on-failure

  #jenkins
  #vault